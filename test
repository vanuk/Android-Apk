class RegisterScreen(Screen):
    def __init__(self, **kwargs):
        super(RegisterScreen, self).__init__(**kwargs)
        layout = BoxLayout(orientation='vertical')
        label = Label(text='')
        self.username_input = TextInput(hint_text='Ім\'я користувача')
        self.email_input = TextInput(hint_text='Електронна пошта')
        self.password_input = TextInput(hint_text='Пароль', password=True)
        register_button = Button(text='Зареєструватися', on_press=self.register)

        layout.add_widget(label)
        layout.add_widget(self.username_input)
        layout.add_widget(self.email_input)
        layout.add_widget(self.password_input)
        layout.add_widget(register_button)

        self.add_widget(layout)

    def register(self, instance):
        username = self.username_input.text
        email = self.email_input.text
        password = self.password_input.text

        if len(password) >= 8:
            # Перевірка, чи існує користувач з такою самою поштою
            cursor.execute("SELECT * FROM registr WHERE email = %s", (email,))
            existing_user = cursor.fetchone()

            if not existing_user:
                # Реєстрація користувача
                cursor.execute("INSERT INTO registr (name, email, password) VALUES (%s, %s, %s)", (username, email, password))
                conn.commit()
                print("Користувач успішно зареєстрований!")
            else:
                print("Електронна пошта вже існує.")
        else:
            print("Пароль повинен містити щонайменше 8 символів.")







class SuccessScreen(Screen):
    def __init__(self, **kwargs):
        super(SuccessScreen, self).__init__(**kwargs)
 
        layout = BoxLayout(orientation='vertical')
        label = Label(text='')
        choose_file_button = Button(text="Відкрити мій ПК")
        choose_file_button.bind(on_press=self.choose_file)

        layout.add_widget(choose_file_button)

        self.book_title_input = TextInput(hint_text="Назва книги")
        self.author_input = TextInput(hint_text="Автор")
        self.description_input = TextInput(hint_text="Опис")

        layout.add_widget(self.book_title_input)
        layout.add_widget(self.author_input)
        layout.add_widget(self.description_input)

        upload_button = Button(text="Завантажити до бази даних")
        upload_button.bind(on_press=self.upload_to_database)

        layout.add_widget(upload_button)

        self.selected_file = None

        self.add_widget(layout)
    def choose_file(self, instance):
        root = tk.Tk()
        root.withdraw()  

        file_path = filedialog.askopenfilename()

        print("Вибраний файл:", file_path)

    def upload_to_database(self, instance):
       
        mycursor = conn.cursor()

        book_title = self.book_title_input.text
        author = self.author_input.text
        description = self.description_input.text

        # Відкриття файлу та читання його вмісту
        #with open(self.selected_file, "rb") as file:
        #    book_content = file.read()

        # SQL запит для вставки даних
        sql = "INSERT INTO catalog (book_title, author, description) VALUES (%s, %s, %s)"
        val = (book_title, author, description)

        mycursor.execute(sql, val)

        conn.commit()

        print(mycursor.rowcount, "запис успішно вставлено.")